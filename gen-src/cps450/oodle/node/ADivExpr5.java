/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.node;

import cps450.oodle.analysis.*;

@SuppressWarnings("nls")
public final class ADivExpr5 extends PExpr5
{
    private PExpr5 _starts_;
    private TOpDiv _opDiv_;
    private PExpr6 _ends_;

    public ADivExpr5()
    {
        // Constructor
    }

    public ADivExpr5(
        @SuppressWarnings("hiding") PExpr5 _starts_,
        @SuppressWarnings("hiding") TOpDiv _opDiv_,
        @SuppressWarnings("hiding") PExpr6 _ends_)
    {
        // Constructor
        setStarts(_starts_);

        setOpDiv(_opDiv_);

        setEnds(_ends_);

    }

    @Override
    public Object clone()
    {
        return new ADivExpr5(
            cloneNode(this._starts_),
            cloneNode(this._opDiv_),
            cloneNode(this._ends_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADivExpr5(this);
    }

    public PExpr5 getStarts()
    {
        return this._starts_;
    }

    public void setStarts(PExpr5 node)
    {
        if(this._starts_ != null)
        {
            this._starts_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._starts_ = node;
    }

    public TOpDiv getOpDiv()
    {
        return this._opDiv_;
    }

    public void setOpDiv(TOpDiv node)
    {
        if(this._opDiv_ != null)
        {
            this._opDiv_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opDiv_ = node;
    }

    public PExpr6 getEnds()
    {
        return this._ends_;
    }

    public void setEnds(PExpr6 node)
    {
        if(this._ends_ != null)
        {
            this._ends_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ends_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._starts_)
            + toString(this._opDiv_)
            + toString(this._ends_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._starts_ == child)
        {
            this._starts_ = null;
            return;
        }

        if(this._opDiv_ == child)
        {
            this._opDiv_ = null;
            return;
        }

        if(this._ends_ == child)
        {
            this._ends_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._starts_ == oldChild)
        {
            setStarts((PExpr5) newChild);
            return;
        }

        if(this._opDiv_ == oldChild)
        {
            setOpDiv((TOpDiv) newChild);
            return;
        }

        if(this._ends_ == oldChild)
        {
            setEnds((PExpr6) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
