/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.node;

import cps450.oodle.analysis.*;

@SuppressWarnings("nls")
public final class AGtExpr2 extends PExpr2
{
    private PExpr3 _stars_;
    private TOpGt _opGt_;
    private PExpr3 _ends_;

    public AGtExpr2()
    {
        // Constructor
    }

    public AGtExpr2(
        @SuppressWarnings("hiding") PExpr3 _stars_,
        @SuppressWarnings("hiding") TOpGt _opGt_,
        @SuppressWarnings("hiding") PExpr3 _ends_)
    {
        // Constructor
        setStars(_stars_);

        setOpGt(_opGt_);

        setEnds(_ends_);

    }

    @Override
    public Object clone()
    {
        return new AGtExpr2(
            cloneNode(this._stars_),
            cloneNode(this._opGt_),
            cloneNode(this._ends_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGtExpr2(this);
    }

    public PExpr3 getStars()
    {
        return this._stars_;
    }

    public void setStars(PExpr3 node)
    {
        if(this._stars_ != null)
        {
            this._stars_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stars_ = node;
    }

    public TOpGt getOpGt()
    {
        return this._opGt_;
    }

    public void setOpGt(TOpGt node)
    {
        if(this._opGt_ != null)
        {
            this._opGt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opGt_ = node;
    }

    public PExpr3 getEnds()
    {
        return this._ends_;
    }

    public void setEnds(PExpr3 node)
    {
        if(this._ends_ != null)
        {
            this._ends_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ends_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._stars_)
            + toString(this._opGt_)
            + toString(this._ends_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._stars_ == child)
        {
            this._stars_ = null;
            return;
        }

        if(this._opGt_ == child)
        {
            this._opGt_ = null;
            return;
        }

        if(this._ends_ == child)
        {
            this._ends_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._stars_ == oldChild)
        {
            setStars((PExpr3) newChild);
            return;
        }

        if(this._opGt_ == oldChild)
        {
            setOpGt((TOpGt) newChild);
            return;
        }

        if(this._ends_ == oldChild)
        {
            setEnds((PExpr3) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
