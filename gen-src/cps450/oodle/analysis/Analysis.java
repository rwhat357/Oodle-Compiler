/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.analysis;

import cps450.oodle.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAStart(AStart node);
    void caseANewlines(ANewlines node);
    void caseAClassDefs(AClassDefs node);
    void caseAClassDef(AClassDef node);
    void caseAInheritsFrom(AInheritsFrom node);
    void caseAVarDecl(AVarDecl node);
    void caseAPartType(APartType node);
    void caseAPartExp(APartExp node);
    void caseAMethodDecl(AMethodDecl node);
    void caseAArgumentDeclList(AArgumentDeclList node);
    void caseAArgDeclTail(AArgDeclTail node);
    void caseAArgDecl(AArgDecl node);
    void caseAIntType(AIntType node);
    void caseAStringType(AStringType node);
    void caseABooleanType(ABooleanType node);
    void caseAIdType(AIdType node);
    void caseAArrType(AArrType node);
    void caseAAssignStmt(AAssignStmt node);
    void caseAIfStmt(AIfStmt node);
    void caseALoopStmt(ALoopStmt node);
    void caseACallStmt(ACallStmt node);
    void caseAPartElse(APartElse node);
    void caseAPartObj(APartObj node);
    void caseAExprList(AExprList node);
    void caseAExprListTail(AExprListTail node);
    void caseAOrExpr(AOrExpr node);
    void caseAOtherExpr(AOtherExpr node);
    void caseAAndExpr1(AAndExpr1 node);
    void caseAOtherExpr1(AOtherExpr1 node);
    void caseAEqExpr2(AEqExpr2 node);
    void caseAGtEqExpr2(AGtEqExpr2 node);
    void caseAGtExpr2(AGtExpr2 node);
    void caseAOtherExpr2(AOtherExpr2 node);
    void caseACatExpr3(ACatExpr3 node);
    void caseAOtherExpr3(AOtherExpr3 node);
    void caseAAddExpr4(AAddExpr4 node);
    void caseASubExpr4(ASubExpr4 node);
    void caseAOtherExpr4(AOtherExpr4 node);
    void caseAMultExpr5(AMultExpr5 node);
    void caseADivExpr5(ADivExpr5 node);
    void caseAOtherExpr5(AOtherExpr5 node);
    void caseANegExpr6(ANegExpr6 node);
    void caseAPosExpr6(APosExpr6 node);
    void caseANotExpr6(ANotExpr6 node);
    void caseAOtherExpr6(AOtherExpr6 node);
    void caseAIdExpr9(AIdExpr9 node);
    void caseALitExpr9(ALitExpr9 node);
    void caseAMeExpr9(AMeExpr9 node);
    void caseAParExpr9(AParExpr9 node);
    void caseANewExpr9(ANewExpr9 node);
    void caseACallExpr9(ACallExpr9 node);
    void caseAArrInxExpr9(AArrInxExpr9 node);
    void caseAPartArrInx(APartArrInx node);
    void caseAIntLit(AIntLit node);
    void caseAStrLit(AStrLit node);
    void caseATrueLit(ATrueLit node);
    void caseAFalseLit(AFalseLit node);
    void caseANullLitLit(ANullLitLit node);

    void caseTBoolean(TBoolean node);
    void caseTBegin(TBegin node);
    void caseTClassId(TClassId node);
    void caseTElse(TElse node);
    void caseTEnd(TEnd node);
    void caseTFalse(TFalse node);
    void caseTFrom(TFrom node);
    void caseTIf(TIf node);
    void caseTInherits(TInherits node);
    void caseTInt(TInt node);
    void caseTIs(TIs node);
    void caseTLoop(TLoop node);
    void caseTMe(TMe node);
    void caseTNew(TNew node);
    void caseTNull(TNull node);
    void caseTString(TString node);
    void caseTThen(TThen node);
    void caseTTrue(TTrue node);
    void caseTWhile(TWhile node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTNot(TNot node);
    void caseTOpCat(TOpCat node);
    void caseTOpPlus(TOpPlus node);
    void caseTOpMinus(TOpMinus node);
    void caseTOpMult(TOpMult node);
    void caseTOpDiv(TOpDiv node);
    void caseTOpGt(TOpGt node);
    void caseTOpGteq(TOpGteq node);
    void caseTOpEq(TOpEq node);
    void caseTOpAssign(TOpAssign node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLBrkt(TLBrkt node);
    void caseTRBrkt(TRBrkt node);
    void caseTComma(TComma node);
    void caseTSemicolon(TSemicolon node);
    void caseTColon(TColon node);
    void caseTPeriod(TPeriod node);
    void caseTComment(TComment node);
    void caseTId(TId node);
    void caseTIntLit(TIntLit node);
    void caseTStrLit(TStrLit node);
    void caseTUntermStrLit(TUntermStrLit node);
    void caseTIllegalStrLit(TIllegalStrLit node);
    void caseTBlanks(TBlanks node);
    void caseTEmptyLine(TEmptyLine node);
    void caseTCont(TCont node);
    void caseTIllegalChar(TIllegalChar node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
