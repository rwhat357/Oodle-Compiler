/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.analysis;

import java.util.*;
import cps450.oodle.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStart(AStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANewlines(ANewlines node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassDefs(AClassDefs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassDef(AClassDef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInheritsFrom(AInheritsFrom node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarDecl(AVarDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPartType(APartType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPartExp(APartExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodDecl(AMethodDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArgumentDeclList(AArgumentDeclList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArgDeclTail(AArgDeclTail node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArgDecl(AArgDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringType(AStringType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanType(ABooleanType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdType(AIdType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrType(AArrType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssignStmt(AAssignStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfStmt(AIfStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALoopStmt(ALoopStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACallStmt(ACallStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPartElse(APartElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPartObj(APartObj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprList(AExprList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprListTail(AExprListTail node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOrExpr(AOrExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOtherExpr(AOtherExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndExpr1(AAndExpr1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOtherExpr1(AOtherExpr1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEqExpr2(AEqExpr2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGtEqExpr2(AGtEqExpr2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGtExpr2(AGtExpr2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOtherExpr2(AOtherExpr2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACatExpr3(ACatExpr3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOtherExpr3(AOtherExpr3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddExpr4(AAddExpr4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubExpr4(ASubExpr4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOtherExpr4(AOtherExpr4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExpr5(AMultExpr5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExpr5(ADivExpr5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOtherExpr5(AOtherExpr5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANegExpr6(ANegExpr6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPosExpr6(APosExpr6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotExpr6(ANotExpr6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOtherExpr6(AOtherExpr6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdExpr9(AIdExpr9 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALitExpr9(ALitExpr9 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMeExpr9(AMeExpr9 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParExpr9(AParExpr9 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANewExpr9(ANewExpr9 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACallExpr9(ACallExpr9 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrInxExpr9(AArrInxExpr9 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPartArrInx(APartArrInx node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntLit(AIntLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStrLit(AStrLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATrueLit(ATrueLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFalseLit(AFalseLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANullLitLit(ANullLitLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolean(TBoolean node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBegin(TBegin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClassId(TClassId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnd(TEnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFrom(TFrom node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInherits(TInherits node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIs(TIs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLoop(TLoop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMe(TMe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNew(TNew node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNull(TNull node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThen(TThen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpCat(TOpCat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpPlus(TOpPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpMinus(TOpMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpMult(TOpMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpDiv(TOpDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpGt(TOpGt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpGteq(TOpGteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpEq(TOpEq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOpAssign(TOpAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBrkt(TLBrkt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBrkt(TRBrkt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPeriod(TPeriod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIntLit(TIntLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStrLit(TStrLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTUntermStrLit(TUntermStrLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIllegalStrLit(TIllegalStrLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlanks(TBlanks node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEmptyLine(TEmptyLine node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCont(TCont node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIllegalChar(TIllegalChar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
